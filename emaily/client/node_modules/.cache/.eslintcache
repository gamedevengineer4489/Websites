[{"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\App.js":"2","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\index.js":"3","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Landing.js":"4","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Header.js":"5","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Dashboard.js":"6","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyNew.js":"7","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\authReducer.js":"8","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\surveysReducer.js":"9","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\actions\\index.js":"10","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Payments.js":"11","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyList.js":"12","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyForm.js":"13","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyFormReview.js":"14","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\actions\\types.js":"15","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyField.js":"16","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\formFields.js":"17","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\utils\\validateEmails.js":"18","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Footer.js":"19"},{"size":650,"mtime":1631868547904,"results":"20","hashOfConfig":"21"},{"size":1097,"mtime":1636964445251,"results":"22","hashOfConfig":"21"},{"size":302,"mtime":1633990121278,"results":"23","hashOfConfig":"21"},{"size":1119,"mtime":1636959690464,"results":"24","hashOfConfig":"21"},{"size":1653,"mtime":1636963627879,"results":"25","hashOfConfig":"21"},{"size":499,"mtime":1633085620541,"results":"26","hashOfConfig":"21"},{"size":760,"mtime":1633237212983,"results":"27","hashOfConfig":"21"},{"size":294,"mtime":1632039058897,"results":"28","hashOfConfig":"21"},{"size":239,"mtime":1632959481820,"results":"29","hashOfConfig":"21"},{"size":2180,"mtime":1633978972473,"results":"30","hashOfConfig":"21"},{"size":834,"mtime":1636961787772,"results":"31","hashOfConfig":"21"},{"size":3362,"mtime":1636961666103,"results":"32","hashOfConfig":"21"},{"size":1532,"mtime":1632211433009,"results":"33","hashOfConfig":"21"},{"size":1267,"mtime":1632964491575,"results":"34","hashOfConfig":"21"},{"size":177,"mtime":1632544335512,"results":"35","hashOfConfig":"21"},{"size":413,"mtime":1632211433007,"results":"36","hashOfConfig":"21"},{"size":379,"mtime":1633248436861,"results":"37","hashOfConfig":"21"},{"size":478,"mtime":1632211433029,"results":"38","hashOfConfig":"21"},{"size":753,"mtime":1636964814592,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"loi7g1",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\index.js",[],["86","87"],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\App.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Landing.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Header.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyNew.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\authReducer.js",["88"],"import { FETCH_USER } from \"../actions/types\";\r\n\r\n\r\nexport default function(state = null, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER:\r\n            console.log(action.payload);\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\reducers\\surveysReducer.js",["89","90"],"import { DELETE_SURVEY, FETCH_SURVEYS } from '../actions/types';\r\n\r\nexport default function(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_SURVEYS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\actions\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Payments.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyList.js",["91","92"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes } from '../../actions';\r\n\r\n\r\nclass SurveyList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSurveys();\r\n  }\r\n\r\n  renderSurveys() {\r\n    return this.props.surveys.reverse().map(survey => {\r\n      return (\r\n\r\n        <div className=\"card medium teal\" key={survey._id}>\r\n          <div className=\"card-content \">\r\n            <span className=\"card-title\" style = {{ fontSize: 'xx-large'}}><b>{survey.title}</b></span>\r\n            <p style = {{ fontSize: 'large'}}>\r\n              <b>Body: </b>{survey.body}\r\n            </p>\r\n            <p style = {{ fontSize: 'large'}}>\r\n              <b>Sent On:</b> {new Date(survey.dateSent).toLocaleDateString() === \"Invalid Date\" ? \"No responses have been received\" : new Date(survey.dateSent).toLocaleDateString()},\r\n              <br />\r\n              <b>Sent From:</b> {survey.from}\r\n              <br />\r\n              <b>Last Responded:</b> {new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? \"No responses received\" : new Date(survey.lastResponded).toLocaleDateString() }\r\n              {new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? console.log(\"No responses have been received\") : console.log(new Date(survey.lastResponded).toLocaleDateString())}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className = \"card-action\">\r\n            <b style = {{ fontSize: 'large' }}>Survey Results</b>\r\n            <br />\r\n            <a style = {{ fontSize: 'large' }}><b>Yes:</b> {survey.yes}</a>\r\n            <a style = {{ fontSize: 'large' }}><b>No:</b> {survey.no}</a>\r\n            <br />\r\n            <a className = \"btn red\" onClick = {() => this.props.deleteSurvey(survey._id)} href = \"/surveys\">Delete Survey</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n    renderSurveysByDateSent() {\r\n      // Need to do something like this with the mongoDB survey data.\r\n      if(this.props.surveys.length > 0)\r\n      {\r\n        let array = this.props.surveys.sort((a, b) => (a.dateSent > b.dateSent) ? 1 : -1);\r\n        console.log(array);\r\n      }\r\n      \r\n    }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <button className = \"btn \" onClick = {() => this.props.fetchSurveysByTitle()} style = {{ backgroundColor: 'dodgerblue'}}>Sort By Title</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysBySentDate()} style = {{ backgroundColor: 'mediumseagreen'}}>Sort By Sent Date</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByNo()} style = {{ backgroundColor: 'violet'}}>Sort By No</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByYes()} style = {{ backgroundColor: 'gray'}}>Sort By Yes</button>\r\n        {this.renderSurveys()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n  return { surveys };\r\n}\r\n// Comment\r\nexport default connect(mapStateToProps, { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes })(SurveyList);","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyForm.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyFormReview.js",["93"],"// SurveyFormReview shows users their form inputs for review\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport formFields from './formFields';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport * as actions from '../../actions';\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues, submitSurvey, history }) => {\r\n  const reviewFields = _.map(formFields, ({ name, label }) => {\r\n    return (\r\n      <div key={name}>\r\n        <label>{label}</label>\r\n        <div>\r\n          {formValues[name]}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h5>Please confirm your entries</h5>\r\n      {reviewFields}\r\n      <button\r\n        className=\"yellow darken-3 white-text btn-flat\"\r\n        onClick={onCancel}\r\n      >\r\n        Back\r\n      </button>\r\n      <button\r\n        onClick={() => submitSurvey(formValues, history )}\r\n        className=\"green btn-flat right white-text\"\r\n      >\r\n        Send Survey\r\n        <i className=\"material-icons right\">email</i>\r\n      </button>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return { formValues: state.form.surveyForm.values };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\actions\\types.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\SurveyField.js",["94"],"// SurveyField contains logic to render a single\r\n// label and text input\r\nimport React from 'react';\r\n\r\nexport default ({ input, label, meta: { error, touched } }) => {\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <input {...input} style={{ marginBottom: '5px' }} />\r\n      <div className=\"red-text\" style={{ marginBottom: '20px' }}>\r\n        {touched && error}\r\n      </div>\r\n    </div>\r\n  );\r\n};","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\emails\\formFields.js",["95"],"export default [\r\n    { label: 'Header', name: 'title' },\r\n    { label: 'Subject Line', name: 'subject' },\r\n    { label: 'Email Body', name: 'body' },\r\n    { label: 'Recipient List', name: 'recipients' },\r\n    { label: 'Sent From', name: 'from'},\r\n    { label: 'Send Grid Key', name: 'sendGridKey'}\r\n]\r\n\r\n// const sendGrid = require('sendgrid');\r\n// const helper = sendGrid.mail;","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\utils\\validateEmails.js",["96","97","98"],"const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default (emails) => {\r\n    const invalidEmails = emails\r\n        .split(',')\r\n        .map(email => email.trim())\r\n        .filter(email => re.test(email) === false)\r\n\r\n        if (invalidEmails.length) {\r\n            return `These emails are invalid: ${invalidEmails}`\r\n        }\r\n\r\n        return;\r\n};","C:\\Users\\alexa\\Documents\\GitHub\\Websites\\emaily\\client\\src\\components\\Footer.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":1,"nodeType":"105","endLine":12,"endColumn":2},{"ruleId":"106","severity":1,"message":"107","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":3,"column":1,"nodeType":"105","endLine":10,"endColumn":2},{"ruleId":"110","severity":1,"message":"111","line":34,"column":13,"nodeType":"112","endLine":34,"endColumn":48},{"ruleId":"110","severity":1,"message":"111","line":35,"column":13,"nodeType":"112","endLine":35,"endColumn":48},{"ruleId":"106","severity":1,"message":"113","line":6,"column":22,"nodeType":"108","messageId":"109","endLine":6,"endColumn":26},{"ruleId":"103","severity":1,"message":"114","line":5,"column":1,"nodeType":"105","endLine":15,"endColumn":3},{"ruleId":"103","severity":1,"message":"115","line":1,"column":1,"nodeType":"105","endLine":8,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":1,"column":22,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":47,"nodeType":"118","messageId":"119","endLine":1,"endColumn":48,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"114","line":3,"column":1,"nodeType":"105","endLine":14,"endColumn":3},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'DELETE_SURVEY' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","Assign arrow function to a variable before exporting as module default","Assign array to a variable before exporting as module default","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["124","125"],["126","127"],"no-global-assign","no-unsafe-negation",{"messageId":"128","fix":"129","desc":"130"},{"messageId":"131","fix":"132","desc":"133"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"131","fix":"135","desc":"133"},"removeEscape",{"range":"136","text":"137"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"138","text":"139"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"140","text":"137"},{"range":"141","text":"139"},[21,22],"",[21,21],"\\",[46,47],[46,46]]