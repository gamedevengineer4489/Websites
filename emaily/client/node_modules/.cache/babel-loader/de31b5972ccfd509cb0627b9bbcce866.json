{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\GitHub\\\\Websites\\\\emaily\\\\client\\\\src\\\\components\\\\emails\\\\SurveyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SurveyList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    return this.props.surveys.reverse().map(survey => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card medium teal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            style: {\n              fontSize: 'xx-large'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: survey.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Body: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this), survey.body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sent On:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), \" \", new Date(survey.dateSent).toLocaleDateString() === \"Invalid Date\" ? \"No responses have been received\" : new Date(survey.dateSent).toLocaleDateString(), \",\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sent From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), \" \", survey.from, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Last Responded:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), \" \", new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? \"No responses received\" : new Date(survey.lastResponded).toLocaleDateString(), new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? console.log(\"No responses have been received\") : console.log(new Date(survey.lastResponded).toLocaleDateString())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: \"Survey Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Yes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 48\n            }, this), \" \", survey.yes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"No:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 48\n            }, this), \" \", survey.no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn red\",\n            onClick: () => this.props.deleteSurvey(survey._id),\n            href: \"/surveys\",\n            children: \"Delete Survey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, survey._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderSurveysByDateSent() {\n    // Need to do something like this with the mongoDB survey data.\n    if (this.props.surveys.length > 0) {\n      let array = this.props.surveys.sort((a, b) => a.dateSent > b.dateSent ? 1 : -1);\n      console.log(array);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn \",\n        onClick: () => this.props.fetchSurveysByTitle(),\n        style: {\n          backgroundColor: 'dodgerblue'\n        },\n        children: \"Sort By Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysBySentDate(),\n        style: {\n          backgroundColor: 'mediumseagreen'\n        },\n        children: \"Sort By Sent Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysByNo(),\n        children: \"Sort By No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysByYes(),\n        children: \"Sort By Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), this.renderSurveys()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  surveys\n}) {\n  return {\n    surveys\n  };\n} // Comment\n\n\nexport default connect(mapStateToProps, {\n  fetchSurveys,\n  deleteSurvey,\n  fetchSurveysByTitle,\n  fetchSurveysBySentDate,\n  fetchSurveysByNo,\n  fetchSurveysByYes\n})(SurveyList);","map":{"version":3,"sources":["C:/Users/alexa/Documents/GitHub/Websites/emaily/client/src/components/emails/SurveyList.js"],"names":["React","Component","connect","fetchSurveys","deleteSurvey","fetchSurveysByTitle","fetchSurveysBySentDate","fetchSurveysByNo","fetchSurveysByYes","SurveyList","componentDidMount","props","renderSurveys","surveys","reverse","map","survey","fontSize","title","body","Date","dateSent","toLocaleDateString","from","lastResponded","console","log","yes","no","_id","renderSurveysByDateSent","length","array","sort","a","b","render","backgroundColor","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes } from '../../actions';\r\n\r\n\r\nclass SurveyList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSurveys();\r\n  }\r\n\r\n  renderSurveys() {\r\n    return this.props.surveys.reverse().map(survey => {\r\n      return (\r\n\r\n        <div className=\"card medium teal\" key={survey._id}>\r\n          <div className=\"card-content \">\r\n            <span className=\"card-title\" style = {{ fontSize: 'xx-large'}}><b>{survey.title}</b></span>\r\n            <p style = {{ fontSize: 'large'}}>\r\n              <b>Body: </b>{survey.body}\r\n            </p>\r\n            <p style = {{ fontSize: 'large'}}>\r\n              <b>Sent On:</b> {new Date(survey.dateSent).toLocaleDateString() === \"Invalid Date\" ? \"No responses have been received\" : new Date(survey.dateSent).toLocaleDateString()},\r\n              <br />\r\n              <b>Sent From:</b> {survey.from}\r\n              <br />\r\n              <b>Last Responded:</b> {new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? \"No responses received\" : new Date(survey.lastResponded).toLocaleDateString() }\r\n              {new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? console.log(\"No responses have been received\") : console.log(new Date(survey.lastResponded).toLocaleDateString())}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className = \"card-action\">\r\n            <b style = {{ fontSize: 'large' }}>Survey Results</b>\r\n            <br />\r\n            <a style = {{ fontSize: 'large' }}><b>Yes:</b> {survey.yes}</a>\r\n            <a style = {{ fontSize: 'large' }}><b>No:</b> {survey.no}</a>\r\n            <br />\r\n            <a className = \"btn red\" onClick = {() => this.props.deleteSurvey(survey._id)} href = \"/surveys\">Delete Survey</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n    renderSurveysByDateSent() {\r\n      // Need to do something like this with the mongoDB survey data.\r\n      if(this.props.surveys.length > 0)\r\n      {\r\n        let array = this.props.surveys.sort((a, b) => (a.dateSent > b.dateSent) ? 1 : -1);\r\n        console.log(array);\r\n      }\r\n      \r\n    }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <button className = \"btn \" onClick = {() => this.props.fetchSurveysByTitle()} style = {{ backgroundColor: 'dodgerblue'}}>Sort By Title</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysBySentDate()} style = {{ backgroundColor: 'mediumseagreen'}}>Sort By Sent Date</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByNo()}>Sort By No</button>\r\n        <span>{' '}</span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByYes()}>Sort By Yes</button>\r\n        {this.renderSurveys()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n  return { surveys };\r\n}\r\n// Comment\r\nexport default connect(mapStateToProps, { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes })(SurveyList);"]},"metadata":{},"sourceType":"module"}