{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\GitHub\\\\Obs-streamer\\\\first\\\\client\\\\src\\\\components\\\\emails\\\\SurveyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys, deleteSurvey } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SurveyList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    return this.props.surveys.reverse().map(survey => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card teal darken-2\",\n        children: [console.log(survey._id), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content white-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            children: survey.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: survey.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"right\",\n            children: [\"Sent On: \", new Date(survey.dateSent).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action white-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"Yes: \", survey.yes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"No: \", survey.no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn\",\n            href: `/surveys/edit/${survey._id}`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn\",\n            onClick: () => this.props.deleteSurvey(survey._id),\n            href: \"/surveys\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, survey._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderSurveys()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  surveys\n}) {\n  return {\n    surveys\n  };\n} // Comment\n\n\nexport default connect(mapStateToProps, {\n  fetchSurveys,\n  deleteSurvey\n})(SurveyList);","map":{"version":3,"sources":["C:/Users/alexa/Documents/GitHub/Obs-streamer/first/client/src/components/emails/SurveyList.js"],"names":["React","Component","connect","fetchSurveys","deleteSurvey","SurveyList","componentDidMount","props","renderSurveys","surveys","reverse","map","survey","console","log","_id","title","body","Date","dateSent","toLocaleDateString","yes","no","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,OAAnB,GAA6BC,GAA7B,CAAiCC,MAAM,IAAI;AAChD,0BAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,mBACGC,OAAO,CAACC,GAAR,CAAaF,MAAM,CAACG,GAApB,CADH,eAEE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBAA8BH,MAAM,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGJ,MAAM,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,oCACY,IAAIC,IAAJ,CAASN,MAAM,CAACO,QAAhB,EAA0BC,kBAA1B,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAA,gCAASR,MAAM,CAACS,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,+BAAQT,MAAM,CAACU,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAeE;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA,kCAEI;AAAG,YAAA,SAAS,EAAG,KAAf;AAAqB,YAAA,IAAI,EAAK,iBAAgBV,MAAM,CAACG,GAAI,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAG,YAAA,SAAS,EAAG,KAAf;AAAqB,YAAA,OAAO,EAAI,MAAM,KAAKR,KAAL,CAAWH,YAAX,CAAwBQ,MAAM,CAACG,GAA/B,CAAtC;AAA2E,YAAA,IAAI,EAAG,UAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA,SAAyCH,MAAM,CAACG,GAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AA8BD,KA/BM,CAAP;AAgCD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKf,aAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9CgC;;AAkDnC,SAASgB,eAAT,CAAyB;AAAEf,EAAAA;AAAF,CAAzB,EAAsC;AACpC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,C,CACD;;;AACA,eAAeP,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys, deleteSurvey } from '../../actions';\r\n\r\nclass SurveyList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSurveys();\r\n  }\r\n\r\n  renderSurveys() {\r\n    return this.props.surveys.reverse().map(survey => {\r\n      return (\r\n\r\n        <div className=\"card teal darken-2\" key={survey._id}>\r\n          {console.log((survey._id))}\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">{survey.title}</span>\r\n            <p>\r\n              {survey.body}\r\n            </p>\r\n            <p className=\"right\">\r\n              Sent On: {new Date(survey.dateSent).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n          <div className=\"card-action white-text\">\r\n            <a>Yes: {survey.yes}</a>\r\n            <a>No: {survey.no}</a>\r\n          </div>\r\n          <div className = \"card-content\">\r\n            \r\n              <a className = \"btn\" href = {`/surveys/edit/${survey._id}`}>Edit</a>\r\n              <span> </span>\r\n              <a className = \"btn\" onClick = {() => this.props.deleteSurvey(survey._id)} href = \"/surveys\">Delete</a>\r\n            \r\n           \r\n          </div>\r\n            \r\n\r\n          \r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderSurveys()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n  return { surveys };\r\n}\r\n// Comment\r\nexport default connect(mapStateToProps, { fetchSurveys, deleteSurvey })(SurveyList);"]},"metadata":{},"sourceType":"module"}