{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\GitHub\\\\Obs-streamer\\\\first\\\\client\\\\src\\\\components\\\\emails\\\\SurveyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SurveyList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    return this.props.surveys.reverse().map(survey => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card blue-grey darken-1\",\n        children: [console.log(survey._id), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content white-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            style: {\n              fontSize: 'xx-large'\n            },\n            children: survey.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 'large'\n            },\n            children: survey.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"right\",\n            style: {\n              fontSize: 'large'\n            },\n            children: [\"Sent On: \", new Date(survey.dateSent).toLocaleDateString() === \"Invalid Date\" ? \"No responses have been received\" : new Date(survey.lastResponded).toLocaleDateString(), \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), \"Last Responded: \", new Date(survey.lastResponded).toLocaleDateString(), new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? console.log(\"No responses have been received\") : console.log(new Date(survey.lastResponded).toLocaleDateString())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action white-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"Yes: \", survey.yes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"No: \", survey.no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn red\",\n            onClick: () => this.props.deleteSurvey(survey._id),\n            href: \"/surveys\",\n            children: \"Delete Survey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, survey._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderSurveysByDateSent() {\n    // Need to do something like this with the mongoDB survey data.\n    if (this.props.surveys.length > 0) {\n      let array = this.props.surveys.sort((a, b) => a.dateSent > b.dateSent ? 1 : -1);\n      console.log(array);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysByTitle(),\n        children: \"Sort By Date Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysBySentDate(),\n        children: \"Sort By Sent Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysByNo(),\n        children: \"Sort By No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.props.fetchSurveysByYes(),\n        children: \"Sort By Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), this.renderSurveys()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  surveys\n}) {\n  return {\n    surveys\n  };\n} // Comment\n\n\nexport default connect(mapStateToProps, {\n  fetchSurveys,\n  deleteSurvey,\n  fetchSurveysByTitle,\n  fetchSurveysBySentDate,\n  fetchSurveysByNo,\n  fetchSurveysByYes\n})(SurveyList);","map":{"version":3,"sources":["C:/Users/alexa/Documents/GitHub/Obs-streamer/first/client/src/components/emails/SurveyList.js"],"names":["React","Component","connect","fetchSurveys","deleteSurvey","fetchSurveysByTitle","fetchSurveysBySentDate","fetchSurveysByNo","fetchSurveysByYes","SurveyList","componentDidMount","props","renderSurveys","surveys","reverse","map","survey","console","log","_id","fontSize","title","body","Date","dateSent","toLocaleDateString","lastResponded","yes","no","renderSurveysByDateSent","length","array","sort","a","b","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes } from '../../actions';\r\n\r\n\r\nclass SurveyList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchSurveys();\r\n  }\r\n\r\n  renderSurveys() {\r\n    return this.props.surveys.reverse().map(survey => {\r\n      return (\r\n\r\n        <div className=\"card blue-grey darken-1\" key={survey._id}>\r\n          {console.log((survey._id))}\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\" style = {{ fontSize: 'xx-large'}}>{survey.title}</span>\r\n            <p style = {{ fontSize: 'large'}}>\r\n              {survey.body}\r\n            </p>\r\n            <p className=\"right\" style = {{ fontSize: 'large'}}>\r\n              Sent On: {new Date(survey.dateSent).toLocaleDateString() === \"Invalid Date\" ? \"No responses have been received\" : new Date(survey.lastResponded).toLocaleDateString()},\r\n              <span> </span>\r\n              Last Responded: {new Date(survey.lastResponded).toLocaleDateString() }\r\n              {new Date(survey.lastResponded).toLocaleDateString() === \"Invalid Date\" ? console.log(\"No responses have been received\") : console.log(new Date(survey.lastResponded).toLocaleDateString())}\r\n            </p>\r\n          </div>\r\n          <div className=\"card-action white-text\">\r\n            <a>Yes: {survey.yes}</a>\r\n            <a>No: {survey.no}</a>\r\n          </div>\r\n          <div className = \"card-action\">\r\n            <a className = \"btn red\" onClick = {() => this.props.deleteSurvey(survey._id)} href = \"/surveys\">Delete Survey</a>\r\n          </div>\r\n            \r\n\r\n          \r\n              \r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n    renderSurveysByDateSent() {\r\n      // Need to do something like this with the mongoDB survey data.\r\n      if(this.props.surveys.length > 0)\r\n      {\r\n        let array = this.props.surveys.sort((a, b) => (a.dateSent > b.dateSent) ? 1 : -1);\r\n        console.log(array);\r\n      }\r\n      \r\n    }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByTitle()}>Sort By Date Title</button>\r\n        <span> </span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysBySentDate()}>Sort By Sent Date</button>\r\n        <span> </span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByNo()}>Sort By No</button>\r\n        <span> </span>\r\n        <button className = \"btn\" onClick = {() => this.props.fetchSurveysByYes()}>Sort By Yes</button>\r\n        {this.renderSurveys()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n  return { surveys };\r\n}\r\n// Comment\r\nexport default connect(mapStateToProps, { fetchSurveys, deleteSurvey, fetchSurveysByTitle, fetchSurveysBySentDate, fetchSurveysByNo, fetchSurveysByYes })(SurveyList);"]},"metadata":{},"sourceType":"module"}